入力した文字列を配列に入れることはできたけど、
####
....
####

の折り返した文字列が一つの配列変数に入っているので？のせいか、
周囲8方向がちゃんと求められない。
2次元配列なので行がちゃんとできているはず。

vec1={###}
vec2={...}
vec3={###}

のように配列を1行ごとに分けると周囲8方向を明確に定義できそうな気する

得られたカウント数をchar型の配列に代入するときにキャストしないといけない。

cout << sum << endl;のところで代入処理が必要
static_cast<char> (sum);でint → charに変換
S[i][j] = sum; // ちゃんと代入できない。
直接代入はできるけど、変数経由で上記のように代入すると値が表示されないので、配列に変数の値を代入する方法を調べる。

vectorだとうまくいきそうなので、vectorの2次元配列を使って解く

vectorだと配列の範囲外を指定するとエラーになるので、範囲外を指定しないようにする。

左上の文字を判定するとき範囲外にならないように修正
左上が存在するか確認
if(i-1>=0 && j-1>=0)

真上
真上が存在するか確認
if(i-1>=0)

右上
右上が存在するか確認
if(i-1>=0 && j+1<=W-1)

左下
左下が存在するか確認
if(i+1<=H-1 && j-1>=0)

真下
真下が存在するか確認
if(i+1<=H-1)

右下
右下が存在するか確認
if(i+1<=H-1 && j+1<=W-1)

→segmentation faultで処理が途中で止まった。
おそらく上記の存在を確認する条件がおかしいので深堀して修正する。

if(data.at(i-1).at(j-1))　これがtrueだったら処理
